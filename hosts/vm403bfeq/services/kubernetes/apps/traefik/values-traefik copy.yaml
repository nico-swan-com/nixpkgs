additionalArguments:
  - "--entrypoints.web.address=:10080"
  - "--entrypoints.websecure.address=:10443"
  - "--providers.kubernetesingress"
  # - "--metrics.prometheus=true"
  - "--serverstransport.insecureskipverify=true"
  - "--api.insecure=true"  # Enable the dashboard in insecure mode
  - "--api.dashboard=true" # Enable the dashboard
  # Configure your CertificateResolver here...
  # 
  # HTTP Challenge
  # ---
  # Generic Example:
    # - --certificatesresolvers.generic.acme.email=nico.swan@cygnus-labs.com
    # - --certificatesresolvers.generic.acme.caServer=https://acme-v02.api.letsencrypt.org/directory
    # - --certificatesresolvers.generic.acme.httpChallenge.entryPoint=web
    # - --certificatesresolvers.generic.acme.storage=/ssl-certs/acme-generic.json
  #
  # Prod / Staging:
  # - --certificatesresolvers.staging.acme.email=nico.swan@cygnus-labs.com
  # - --certificatesresolvers.staging.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory
  # - --certificatesresolvers.staging.acme.httpChallenge.entryPoint=web
  # - --certificatesresolvers.staging.acme.storage=/ssl-certs/acme-staging.json
  # - --certificatesresolvers.production.acme.email=nico.swan@cygnus-labs.com
  # - --certificatesresolvers.production.acme.caServer=https://acme-v02.api.letsencrypt.org/directory
  # - --certificatesresolvers.production.acme.httpChallenge.entryPoint=web
  # - --certificatesresolvers.production.acme.storage=/ssl-certs/acme-production.json
  #
  # DNS Challenge
  # ---
  # Cloudflare Example:
  # - --certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare
  # - --certificatesresolvers.cloudflare.acme.email=nico.swan@cygnus-labs.com
  # - --certificatesresolvers.cloudflare.acme.dnschallenge.resolvers=1.1.1.1
  # - --certificatesresolvers.cloudflare.acme.storage=/ssl-certs/acme-cloudflare.json
  #
  # Generic (replace with your DNS provider):
  #  - --certificatesresolvers.generic.acme.dnschallenge.provider=generic
  #  - --certificatesresolvers.generic.acme.email=your-email@example.com
  #  - --certificatesresolvers.generic.acme.storage=/ssl-certs/acme-generic.json
logs:
# Configure log settings here...
  general:
    level: ERROR
# service:    
#   externalIPs: 
#    # - "102.135.163.95"
#      - "172.1.1.1" 
ports:
# Configure your entrypoints here...
  web:
    port: 10080
    targetPort: 80
    # (optional) Permanent Redirect to HTTPS
  #  redirectTo:
  #    port: websecure
  websecure:
    port: 10443
    targetPort: 443
  #   tls:
  #     enabled: true
      # (optional) Set a Default CertResolver
      #certResolver: cloudflare
#env:
# Set your environment variables here...
# 
# DNS Challenge Credentials
# ---
# Cloudflare Example:
  # - name: CF_API_EMAIL
  #   valueFrom:
  #     secretKeyRef:
  #       key: email
  #       name: cloudflare-credentials
  # - name: CF_API_KEY
  #   valueFrom:
  #     secretKeyRef:
  #       key: apiKey
  #       name: cloudflare-credentials

# Disable Dashboard
ingressRoute:
  dashboard:
    enabled: true
  healthcheck:
    enabled: true
  # kubernetesGateway:
  #   enabled: true


# Persistent Storage
# persistence:
#   enabled: true
#   name: ssl-certs
#   size: 1Gi
#   path: /ssl-certs

# deployment:
#   initContainers:
#     # The "volume-permissions" init container is required if you run into permission issues.
#     # Related issue: https://github.com/containous/traefik/issues/6972
#     - name: volume-permissions
#       image: busybox:1.36.1
#       command: ["sh", "-c", "chmod -Rv 600 /ssl-certs/*"]
#       volumeMounts:
#         - name: ssl-certs
#           mountPath: /ssl-certs

# Set Traefik as your default Ingress Controller, according to Kubernetes 1.19+ changes.
ingressClass:
  enabled: true
  isDefaultClass: true
